"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[485],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>y});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),g=a,y=p["".concat(c,".").concat(g)]||p[g]||d[g]||o;return t?r.createElement(y,i(i({ref:n},l),{},{components:t})):r.createElement(y,i({ref:n},l))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},6429:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=t(7462),a=(t(7294),t(3905));const o={id:"upgrades",title:"Setting up Upgrading",sidebar_label:"Upgrades"},i=void 0,s={unversionedId:"tutorials/coinGame/upgrades",id:"tutorials/coinGame/upgrades",title:"Setting up Upgrading",description:"---",source:"@site/docs/tutorials/coinGame/upgrades.md",sourceDirName:"tutorials/coinGame",slug:"/tutorials/coinGame/upgrades",permalink:"/emath.js/docs/tutorials/coinGame/upgrades",draft:!1,editUrl:"https://github.com/xShadowBlade/emath.js/tree/main/website/docs/tutorials/coinGame/upgrades.md",tags:[],version:"current",frontMatter:{id:"upgrades",title:"Setting up Upgrading",sidebar_label:"Upgrades"},sidebar:"tutorialSidebar",previous:{title:"Currencies",permalink:"/emath.js/docs/tutorials/coinGame/currency"}},c={},u=[],l={toc:u},p="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Welcome to the final part of this basics tutorial."),(0,a.kt)("p",null,"WIP coming soon ;",")"),(0,a.kt)("p",null,"Final code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'window.addEventListener("load", () => {\n    const { E } = eMath;\n\n    // Initialize currency and static currency\n\n    const currency = new eMath.classes.currency();\n    const staticC = new eMath.classes.currencyStatic(() => currency);\n\n    // Create Coins Display\n\n    const coinsDisplay = document.createElement("p");\n    document.body.appendChild(coinsDisplay);\n    coinsDisplay.id = "coinsDisplay";\n\n    // Function to update the coins display\n\n    function updateDisplay () {\n        document.getElementById("coinsDisplay").innerHTML = `Coins: ${currency.value.format()} (x${staticC.boost.calculate().format()})`; // Updates the display and shows the multiplier. Ex. "Coins: 2.00 (x1.0)"\n    }\n    updateDisplay();\n\n    // Create gain button\n\n    const gainButton = document.createElement("button");\n    gainButton.innerHTML = "Gain Coins";\n    document.body.appendChild(gainButton);\n    gainButton.addEventListener("click", () => {\n        // Triggers when button is pressed\n        staticC.gain(); // Gain\n        updateDisplay(); // Updates the display for the amount of coins\n        updateDisplayUpgrade();\n    });\n\n    // Upgrades\n\n    staticC.addUpgrade([\n        {\n            name: "Basic Coin Boost",\n            cost: E(10),\n            costScaling: n => n.mul(2),\n            maxLevel: E(1000),\n            effect: function () {\n                console.log(this);\n                const level = this.getLevel();\n                console.log(level);\n\n                staticC.boost.bSet(\n                    "boostUpg1Coins",\n                    "Basic Coin Boost",\n                    "Basic Coin Boost",\n                    n => E(n).plus(level).sub(1),\n                    1,\n                );\n            },\n        },\n    ]);\n\n    // Buy Upgrades button\n\n    const buyUpgradesButton = document.createElement("button");\n    document.body.appendChild(buyUpgradesButton);\n    buyUpgradesButton.id = "buyUpgradesButton";\n    function updateDisplayUpgrade () {\n        document.getElementById("buyUpgradesButton").innerHTML = `Buy ${staticC.calculateUpgrade(0, 1)[0]} Upgrades for ${staticC.calculateUpgrade(0, 1)[1]} Coins`;\n    }\n    updateDisplayUpgrade();\n    buyUpgradesButton.addEventListener("click", () => {\n        staticC.buyUpgrade(0, 100);\n        updateDisplayUpgrade();\n        updateDisplay();\n    });\n});\n')))}d.isMDXComponent=!0}}]);