"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[767],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>b});var o=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)a=l[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)a=l[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=o.createContext({}),c=function(e){var t=o.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(a),d=n,b=p["".concat(i,".").concat(d)]||p[d]||m[d]||l;return a?o.createElement(b,r(r({ref:t},u),{},{components:a})):o.createElement(b,r({ref:t},u))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,r=new Array(l);r[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:n,r[1]=s;for(var c=2;c<l;c++)r[c]=a[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1520:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var o=a(7462),n=(a(7294),a(3905));const l={id:"boost-static",title:"Boost Static"},r="Boost Static",s={unversionedId:"boost-static",id:"boost-static",title:"Boost Static",description:"Represents a boost manager that applies various effects to a base value.",source:"@site/docs/boost.md",sourceDirName:".",slug:"/boost-static",permalink:"/docs/boost-static",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/boost.md",tags:[],version:"current",frontMatter:{id:"boost-static",title:"Boost Static"},sidebar:"tutorialSidebar",previous:{title:"Congratulations!",permalink:"/docs/tutorial-basics/congratulations"}},i={},c=[{value:"Class: <code>boostStatic</code>",id:"class-booststatic",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>bGet(id)</code>",id:"bgetid",level:3},{value:"<code>bRemove(id)</code>",id:"bremoveid",level:3},{value:"<code>bSet(id, name, desc, value, order)</code>",id:"bsetid-name-desc-value-order",level:3},{value:"bSetAdvanced(...boosts)",id:"bsetadvancedboosts",level:3},{value:"calculate(base)",id:"calculatebase",level:3},{value:"Example Usage",id:"example-usage",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,o.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"boost-static"},"Boost Static"),(0,n.kt)("p",null,"Represents a boost manager that applies various effects to a base value."),(0,n.kt)("h2",{id:"class-booststatic"},"Class: ",(0,n.kt)("inlineCode",{parentName:"h2"},"boostStatic")),(0,n.kt)("h3",{id:"constructor"},"Constructor"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Parameters:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"baseEffect")," (optional): The base effect value to which boosts are applied. Default is ",(0,n.kt)("inlineCode",{parentName:"li"},"1"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"pointer"),": A function that returns ",(0,n.kt)("inlineCode",{parentName:"li"},"Game.classes.boost"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"...boosts"),": An array of boost objects to initialize with.")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'const myBoost = new Game.classes.boost(100, {\n  id: "reallyCoolBoost124",\n  name: "buff this",\n  desc: "really cool lol",\n  type: "add",\n  value: E(124),\n});\nconst myBoostStatic = new Game.classes.boostStatic(1, pointer, myBoost);\n')),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"bgetid"},(0,n.kt)("inlineCode",{parentName:"h3"},"bGet(id)")),(0,n.kt)("p",null,"Gets a boost object by its ID."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"id"),": The ID of the boost to retrieve."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Returns:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The boost object if found, or ",(0,n.kt)("inlineCode",{parentName:"li"},"null")," if not found.")))),(0,n.kt)("h3",{id:"bremoveid"},(0,n.kt)("inlineCode",{parentName:"h3"},"bRemove(id)")),(0,n.kt)("p",null,"Removes a boost by its ID."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Parameters:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"id"),": The ID of the boost to remove.")))),(0,n.kt)("h3",{id:"bsetid-name-desc-value-order"},(0,n.kt)("inlineCode",{parentName:"h3"},"bSet(id, name, desc, value, order)")),(0,n.kt)("p",null,"Sets or updates a boost with the given parameters."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Parameters:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"id"),": The ID of the boost."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"name"),": The name of the boost."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"desc"),": The description of the boost."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"value"),": The value of the boost (function)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"order"),": The order of the boost (higher order goes first).")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'myBoostStatic.bSet("myBoostID", "My Boost", "Boost Description", valueFunction, 2);\n')),(0,n.kt)("h3",{id:"bsetadvancedboosts"},"bSetAdvanced(...boosts)"),(0,n.kt)("p",null,"Sets or updates multiple boosts with advanced parameters."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Parameters:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"...boosts"),": Boost objects to set or update.")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"myBoostStatic.bSetAdvanced(boost1, boost2, boost3);\n")),(0,n.kt)("h3",{id:"calculatebase"},"calculate(base)"),(0,n.kt)("p",null,"Calculates the cumulative effect of all boosts on the base effect."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Parameters:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"base")," (optional): The base effect value to calculate with. Default is this.baseEffect"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Returns:"),"\nThe calculated effect after applying boosts.")),(0,n.kt)("h2",{id:"example-usage"},"Example Usage"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'const myBoost = new Game.classes.boost(100, {\n  id: "reallyCoolBoost124",\n  name: "buff this",\n  desc: "really cool lol",\n  type: "add",\n  value: E(124),\n});\n\nconst myBoostStatic = new Game.classes.boostStatic(1, pointer, myBoost);\n\n// Set additional boosts\nmyBoostStatic.bSet("anotherBoostID", "Another Boost", "Boost Description", valueFunction, 1);\n\n// Calculate the cumulative effect\nconst calculatedEffect = myBoostStatic.calculate();\n')))}m.isMDXComponent=!0}}]);